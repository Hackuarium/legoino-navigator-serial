{"version":3,"file":"legoino-navigator-serial.min.js","sources":["../node_modules/delay/index.js","../src/Action.js","../src/Device.js","../src/util/EventEmitter.js","../node_modules/@lukeed/uuid/dist/index.mjs","../src/grbl/alarmsDescription.js","../src/grbl/errorsDescription.js","../src/grbl/parametersDescription.js","../src/grbl/settingsDescription.js","../src/grbl/updateState.js","../src/grbl/grbl.js","../src/DevicesManager.js","../src/util/checkSerial.js","../src/terminal/Terminal.js"],"sourcesContent":["'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n","import delay from 'delay';\n\nconst STATUS_CREATED = 0;\nconst STATUS_COMMAND_SENT = 10;\nconst STATUS_WAITING_RECEIVING = 20;\nconst STATUS_ANSWER_PARTIALLY_RECEIVED = 30;\nconst STATUS_ANSWER_RECEIVED = 40;\nconst STATUS_RESOLVED = 50;\nconst STATUS_ERROR = 60;\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nexport class Action {\n  constructor(command, device, options = {}) {\n    this.device = device;\n    this.currentTimeout = undefined;\n    this.command = command;\n    this.timeout = options.timeout ?? 200;\n    this.timeoutResolve = options.timeoutResolve ?? false;\n    this.disableTerminal = options.disableTerminal ?? false;\n    this.kind = options.kind ?? 'writeRead';\n    this.answer = '';\n    this.partialAnswer = '';\n    this.logger = options.logger;\n    this.status = STATUS_CREATED;\n    this.creationTimestamp = Date.now();\n    this.promise = new Promise((resolve, reject) => {\n      this.reject = reject;\n      this.resolve = resolve;\n    });\n    this.isEndCommandAnswer =\n      options.isEndCommandAnswer ??\n      (() => {\n        throw new Error('isEndCommandAnswer is not defined');\n      });\n    this.endCommandAnswerCallback =\n      options.endCommandAnswerCallback ??\n      (() => {\n        throw new Error('endCommandAnswerCallback is not defined');\n      });\n    this.logger?.info('Action created');\n  }\n\n  isFinished() {\n    return this.status === STATUS_RESOLVED || this.status === STATUS_ERROR;\n  }\n\n  setTimeout() {\n    if (this.currentTimeout) {\n      clearTimeout(this.currentTimeout);\n    }\n    this.currentTimeout = setTimeout(() => {\n      if (this.status === STATUS_RESOLVED || this.status === STATUS_ERROR) {\n        return;\n      }\n      if (this.timeoutResolve) {\n        this.status = STATUS_RESOLVED;\n        this.resolve(this.partialAnswer);\n        !this.disableTerminal &&\n          this.device.terminal?.receive(this.partialAnswer);\n        this.logger?.info(`Timeout resolved after ${this.timeout}ms`);\n      } else {\n        this.status = STATUS_ERROR;\n        this.reject(this.partialAnswer);\n        !this.disableTerminal &&\n          this.device.terminal?.receive(this.partialAnswer);\n        this.logger?.error(`Timeout reject after ${this.timeout}ms`);\n      }\n    }, this.timeout);\n  }\n\n  async writeRead() {\n    this.startTimestamp = Date.now();\n    this.status = STATUS_COMMAND_SENT;\n    await this.setTimeout();\n    this.writeText(this.command)\n      .then(async () => {\n        await this.readText();\n        this.status = STATUS_ANSWER_RECEIVED;\n        this.answer = this.endCommandAnswerCallback(\n          this.command,\n          this.partialAnswer,\n        );\n      })\n      .then(() => {\n        this.status = STATUS_RESOLVED;\n        this.resolve(this.answer);\n      });\n    return this.promise;\n  }\n\n  async writeText(command) {\n    if (!command) return;\n    const dataArrayBuffer = encoder.encode(`${command}\\n`);\n    !this.disableTerminal && this.device.terminal?.send(command);\n    return this.device.writer.write(dataArrayBuffer);\n  }\n\n  async readText() {\n    this.status = STATUS_ANSWER_PARTIALLY_RECEIVED;\n    while (this.status === STATUS_ANSWER_PARTIALLY_RECEIVED) {\n      const chunk = await this.device.reader.read();\n      if (chunk.value.length > 0) {\n        // as long as we receive, we delay the timeout\n        this.setTimeout();\n      }\n      this.partialAnswer += decoder.decode(chunk.value);\n      if (this.isEndCommandAnswer(this.command, this.partialAnswer)) break;\n      await delay(5);\n    }\n    !this.disableTerminal && this.device.terminal?.receive(this.partialAnswer);\n  }\n}\n","import delay from 'delay';\n\nimport { Action } from './Action';\n\nexport const STATUS_OPENING = 1;\nexport const STATUS_OPENED = 2;\nexport const STATUS_CLOSED = 3;\nexport const STATUS_MISSING = 9;\nexport const STATUS_ERROR = 10;\nconst statusLabels = {\n  [STATUS_OPENING]: 'opening',\n  [STATUS_OPENED]: 'opened',\n  [STATUS_CLOSED]: 'closed',\n  [STATUS_MISSING]: 'missing',\n  [STATUS_ERROR]: 'error',\n};\n\nexport class Device {\n  constructor(serialPort, options = {}) {\n    const { commandOptions = {}, deviceOptions = {} } = options;\n    this.logger = options.logger;\n    this.terminal = options.terminal;\n    this.setStatus(STATUS_OPENING);\n    this.id = undefined;\n    this.serialPort = serialPort;\n    this.baudRate = deviceOptions.baudRate || 115200;\n    this.interCommandDelay = deviceOptions.interCommandDelay || 10;\n    this.getID =\n      deviceOptions.getID ??\n      (async (device) => {\n        return `${device.usbVendorId}-${device.usbProductId}`;\n      });\n    this.timeout = deviceOptions.timeout || 100;\n    this.commandOptions = commandOptions;\n\n    this.queue = [];\n    this.action = undefined;\n\n    this.usbVendorId = options.usbVendorId;\n    this.usbProductId = options.usbProductId;\n    this.logger?.info(`Device created`);\n  }\n\n  setStatus(status) {\n    this.status = status;\n    this.statusLabel = statusLabels[status];\n  }\n\n  isReady() {\n    return this.status === STATUS_OPENED;\n  }\n\n  /** restart process queue if the previous one was finished */\n  async ensureProcessQueue() {\n    this.logger?.info('ensureProcessQueue');\n    if (!this.currentProcessQueue) {\n      this.currentProcessQueue = this.runProcessQueue();\n    }\n    return this.currentProcessQueue;\n  }\n\n  async runProcessQueue() {\n    while (this.queue.length > 0) {\n      this.action = this.queue.shift();\n      if (this.action) {\n        await this.action\n          .writeRead()\n          .then((value) => {\n            this.logger?.info(\n              { command: this.action.command, answer: this.action.answer },\n              'Resolve writeRead command',\n            );\n          })\n          .catch((error) => {\n            this.logger?.error(\n              {\n                command: this.action.command,\n                answer: this.action.partialAnswer,\n              },\n              error.toString(),\n            );\n          });\n\n        this.action = undefined;\n        await delay(this.interCommandDelay);\n      }\n    }\n    this.currentProcessQueue = undefined;\n  }\n\n  async getStatus() {\n    return {\n      value: this.status,\n    };\n  }\n\n  async ensureOpen() {\n    this.logger?.trace(`Ensure open`);\n    let counter = 0;\n    // we wait for the serial port to be opened for max 1s\n    while (this.status === STATUS_OPENING && counter++ < 100) {\n      await delay(10);\n    }\n\n    if (this.status !== STATUS_OPENED) {\n      return this.open();\n    }\n  }\n\n  async open() {\n    this.logger?.info(`Opening`);\n    await this.serialPort\n      .open({\n        baudRate: this.baudRate,\n      })\n      .catch((error) => {\n        this.error(error);\n        this.close();\n      })\n      .then(() => {\n        this.ensureOpen();\n      });\n    this.reader = this.serialPort.readable.getReader();\n    this.writer = this.serialPort.writable.getWriter();\n    this.logger?.info(`Getting id`);\n\n    this.id = await this.getID(this);\n\n    this.logger?.info(`Id: ${this.id}`);\n    this.setStatus(STATUS_OPENED);\n  }\n\n  /*\n   We need to add this command in the queue and wait it resolves or rejects\n  */\n  async get(command, options = {}) {\n    const {\n      timeout = this.timeout,\n      timeoutResolve = false,\n      disableTerminal = false,\n    } = options;\n\n    const action = new Action(command, this, {\n      ...this.commandOptions,\n      timeout,\n      timeoutResolve,\n      disableTerminal,\n      logger: this.logger.child({ kind: 'Command', command }),\n    });\n\n    this.queue.push(action);\n    this.ensureProcessQueue();\n    return action.promise;\n  }\n\n  error(error) {\n    this.logger?.error(error, `Error ${this.serialPort?.path}`);\n    this.setStatus(STATUS_ERROR);\n    /**\n    this.emit('adapter', {\n      event: 'Error',\n      value: error,\n    });\n    **/\n  }\n\n  close() {\n    this.logger?.info(`Close`);\n    this.setStatus(STATUS_CLOSED);\n  }\n}\n","export default class EventEmitter {\n  constructor() {\n    this.callbacks = {};\n  }\n\n  on(event, cb) {\n    if (!this.callbacks[event]) this.callbacks[event] = [];\n    this.callbacks[event].push(cb);\n  }\n\n  emit(event, data) {\n    let cbs = this.callbacks[event];\n    if (cbs) {\n      cbs.forEach((cb) => cb(data));\n    }\n  }\n}\n","var IDX=256, HEX=[], BUFFER;\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nexport function v4() {\n\tvar i=0, num, out='';\n\n\tif (!BUFFER || ((IDX + 16) > 256)) {\n\t\tBUFFER = Array(i=256);\n\t\twhile (i--) BUFFER[i] = 256 * Math.random() | 0;\n\t\ti = IDX = 0;\n\t}\n\n\tfor (; i < 16; i++) {\n\t\tnum = BUFFER[IDX + i];\n\t\tif (i==6) out += HEX[num & 15 | 64];\n\t\telse if (i==8) out += HEX[num & 63 | 128];\n\t\telse out += HEX[num];\n\n\t\tif (i & 1 && i > 1 && i < 11) out += '-';\n\t}\n\n\tIDX++;\n\treturn out;\n}\n","export const alarmsDescription = {\n  1: 'Hard limit triggered. Machine position is likely lost due to sudden and immediate halt. Re-homing is highly recommended.',\n  2: 'G-code motion target exceeds machine travel. Machine position safely retained. Alarm may be unlocked.',\n  3: 'Reset while in motion. Grbl cannot guarantee position. Lost steps are likely. Re-homing is highly recommended.',\n  4: 'Probe fail. The probe is not in the expected initial state before starting probe cycle, where G38.2 and G38.3 is not triggered and G38.4 and G38.5 is triggered.',\n  5: 'Probe fail. Probe did not contact the workpiece within the programmed travel for G38.2 and G38.4.',\n  6: 'Homing fail. Reset during active homing cycle.',\n  7: 'Homing fail. Safety door was opened during active homing cycle.',\n  8: 'Homing fail. Cycle failed to clear limit switch when pulling off. Try increasing pull-off setting or check wiring.',\n  9: 'Homing fail. Could not find limit switch within search distance. Defined as `1.5 * max_travel` on search and `5 * pulloff` on locate phases.',\n};\n","export const errorsDescription = {\n  1: 'G-code words consist of a letter and a value. Letter was not found.',\n  2: 'Numeric value format is not valid or missing an expected value.',\n  3: 'Grbl `$` system command was not recognized or supported.',\n  4: 'Negative value received for an expected positive value.',\n  5: 'Homing cycle is not enabled via settings.',\n  6: 'Minimum step pulse time must be greater than 3usec',\n  7: 'EEPROM read failed. Reset and restored to default values.',\n  8: 'Grbl `$` command cannot be used unless Grbl is IDLE. Ensures smooth operation during a job.',\n  9: 'G-code locked out during alarm or jog state',\n  10: 'Soft limits cannot be enabled without homing also enabled.',\n  11: 'Max characters per line exceeded. Line was not processed and executed.',\n  12: '(Compile Option) Grbl `$` setting value exceeds the maximum step rate supported.',\n  13: 'Safety door detected as opened and door state initiated.',\n  14: '(Grbl-Mega Only) Build info or startup line exceeded EEPROM line length limit.',\n  15: 'Jog target exceeds machine travel. Command ignored.',\n  16: 'Jog command with no `=` or contains prohibited g-code.',\n  17: 'Laser mode disabled. Requires PWM output.',\n  20: 'Unsupported or invalid g-code command found in block.',\n  21: 'More than one g-code command from same modal group found in block.',\n  22: 'Feed rate has not yet been set or is undefined.',\n  23: 'G-code command in block requires an integer value.',\n  24: 'Two G-code commands that both require the use of the `XYZ` axis words were detected in the block.',\n  25: 'A G-code word was repeated in the block.',\n  26: 'A G-code command implicitly or explicitly requires `XYZ` axis words in the block, but none were detected.',\n  27: '`N` line number value is not within the valid range of `1` - `9,999,999`.',\n  28: 'A G-code command was sent, but is missing some required `P` or `L` value words in the line.',\n  29: 'Grbl supports six work coordinate systems `G54-G59`. `G59.1`, `G59.2`, and `G59.3` are not supported.',\n  30: 'The `G53` G-code command requires either a `G0` seek or `G1` feed motion mode to be active. A different motion was active.',\n  31: 'There are unused axis words in the block and `G80` motion mode cancel is active.',\n  32: 'A `G2` or `G3` arc was commanded but there are no `XYZ` axis words in the selected plane to trace the arc.',\n  33: 'The motion command has an invalid target. `G2`, `G3`, and `G38.2` generates this error, if the arc is impossible to generate or if the probe target is the current position.',\n  34: 'A `G2` or `G3` arc, traced with the radius definition, had a mathematical error when computing the arc geometry. Try either breaking up the arc into semi-circles or quadrants, or redefine them with the arc offset definition.',\n  35: 'A `G2` or `G3` arc, traced with the offset definition, is missing the `IJK` offset word in the selected plane to trace the arc.',\n  36: \"There are unused, leftover G-code words that aren't used by any command in the block.\",\n  37: 'The `G43.1` dynamic tool length offset command cannot apply an offset to an axis other than its configured axis. The Grbl default axis is the Z-axis.',\n  38: 'Tool number greater than max supported value.',\n};\n","export const parametersDescription = {};\n","export const settingsDescription = {\n  $0: 'Step pulse time, microseconds',\n  $1: 'Step idle delay, milliseconds',\n  $2: 'Step pulse invert, mask',\n  $3: 'Step direction invert, mask',\n  $4: 'Invert step enable pin, boolean',\n  $5: 'Invert limit pins, boolean',\n  $6: 'Invert probe pin, boolean',\n  $10: 'Status report options, mask',\n  $11: 'Junction deviation, millimeters',\n  $12: 'Arc tolerance, millimeters',\n  $13: 'Report in inches, boolean',\n  $20: 'Soft limits enable, boolean',\n  $21: 'Hard limits enable, boolean',\n  $22: 'Homing cycle enable, boolean',\n  $23: 'Homing direction invert, mask',\n  $24: 'Homing locate feed rate, mm/min',\n  $25: 'Homing search seek rate, mm/min ',\n  $26: 'Homing switch debounce delay, milliseconds',\n  $27: 'Homing switch pull-off distance, millimeters',\n  $30: 'Maximum spindle speed, RPM',\n  $31: 'Minimum spindle speed, RPM',\n  $32: 'Laser-mode enable, boolean',\n  $100: 'X-axis steps per millimeter',\n  $101: 'Y-axis steps per millimeter',\n  $102: 'Z-axis steps per millimeter',\n  $110: 'X-axis maximum rate, mm/min',\n  $111: 'Y-axis maximum rate, mm/min',\n  $112: 'Z-axis maximum rate, mm/min',\n  $120: 'X-axis acceleration, mm/sec^2',\n  $121: 'Y-axis acceleration, mm/sec^2',\n  $122: 'Z-axis acceleration, mm/sec^2',\n  $130: 'X-axis maximum travel, millimeters',\n  $131: 'Y-axis maximum travel, millimeters',\n  $132: 'Z-axis maximum travel, millimeters',\n};\n","import { alarmsDescription } from './alarmsDescription.js';\nimport { errorsDescription } from './errorsDescription.js';\nimport { parametersDescription } from './parametersDescription.js';\nimport { settingsDescription } from './settingsDescription.js';\n\n// format description: https://github.com/gnea/grbl/edit/master/doc/markdown/interface.md\nconst MAX_ERRORS_MESSAGES = 20;\n\n/**\n * @typedef {Object} State\n * @property {object[]} [state.messages=[]]\n * @property {object} [state.status={}]\n * @property {object} [state.settings={}]\n * @property {object} [state.parameters={}]\n * @property {string} [state.version='']\n */\n\n/**\n *\n * @param {string} input\n * @param {State} [state={}]\n * @returns\n */\nexport function updateState(input, state = {}) {\n  if (!input) return;\n  const lines = input.split(/\\r?\\n/);\n\n  for (let line of lines) {\n    if (line.startsWith('<')) {\n      parseQuestionMark(line, state);\n    }\n    if (line.startsWith('[')) {\n      parseSquareBracket(line, state);\n    }\n    if (line.startsWith('$')) {\n      parseSettings(line, state);\n    }\n    if (line.startsWith('Grbl')) {\n      state.version = line.replace('Grbl ', '');\n    }\n    if (line.startsWith('error')) {\n      parseErrors(line, state);\n    }\n    if (line.includes('ALARM')) {\n      parseAlarms(line, state);\n    }\n  }\n}\n\n/**\n *\n * @param {string} line\n * @param {State} [state={}]\n * @returns\n */\nfunction parseErrors(line, state) {\n  const [, error] = line.split(':');\n  appendMessage(\n    {\n      kind: 'ERROR',\n      code: error,\n      description: errorsDescription[error],\n    },\n    state,\n  );\n}\n\n/**\n *\n * @param {string} line\n * @param {State} [state={}]\n * @returns\n */\nfunction parseAlarms(line, state) {\n  const [, alarm] = line.split(':');\n  appendMessage(\n    {\n      kind: 'ALARM',\n      code: alarm,\n      description: alarmsDescription[alarm],\n    },\n    state,\n  );\n}\n\n/**\n *\n * @param {string} line\n * @param {State} [state]\n * @return\n */\nfunction parseSettings(line, state) {\n  const [key, value] = line.split('=');\n  state.settings[key] = {\n    key,\n    description: settingsDescription[key],\n    value: Number(value),\n  };\n}\n\nconst keyMappings = {\n  HLP: 'Help',\n  MSG: 'Message',\n  GC: 'GCode',\n  VER: 'Version',\n  OPT: 'Option',\n  echo: 'Echo',\n};\n\n/**\n *\n * @param {string} line\n * @param {State} [state={}]\n * @returns\n */\nfunction parseSquareBracket(line, state = {}) {\n  const [key, value] = line.replace(/\\[(.*)\\]/, '$1').split(':');\n  const description = line\n    .replace(/\\[(.*)\\]/, '$1')\n    .split(':')\n    .slice(1)\n    .join(':');\n  switch (key) {\n    case 'echo':\n    case 'VER':\n    case 'OPT':\n    case 'HLP':\n    case 'GC':\n    case 'MSG':\n      appendMessage({ kind: keyMappings[key], description }, state);\n      return;\n    default:\n      state.parameters[key] = {\n        key,\n        description: parametersDescription[key],\n        value: value.split(',').map((field) => Number(field)),\n      };\n  }\n}\n\n/**\n *\n * @param {string} line\n * @param {State} [state]\n * @returns\n */\nfunction parseQuestionMark(line, state = {}) {\n  //  <Idle|MPos:0.000,0.000,0.000|FS:0,0|WCO:0.000,0.000,0.000>\n  const parts = line.replace(/<(.*)>/, '$1').split('|');\n  const status = { value: parts[0] };\n  status.Pn = [false, false, false];\n  for (let i = 1; i < parts.length; i++) {\n    const [key, value] = parts[i].split(':');\n\n    if (key === 'Pn') {\n      status[key] = [\n        value.includes('X'),\n        value.includes('Y'),\n        value.includes('Z'),\n      ];\n    } else {\n      status[key] = value.split(',').map((v) => Number(v));\n    }\n  }\n  state.status = { ...state.status, ...status };\n}\n\nfunction appendMessage(message, state) {\n  state.messages.push({\n    epoch: Date.now(),\n    ...message,\n  });\n  if (state.messages.length > MAX_ERRORS_MESSAGES) {\n    state.messages.splice(0, state.messages.length - MAX_ERRORS_MESSAGES);\n  }\n  console.log(state.messages);\n}\n","import { updateState } from './updateState.js';\n\nfunction getEmptyState() {\n  return {\n    messages: [],\n    status: {},\n    settings: {},\n    parameters: {},\n    version: '',\n    gcode: {\n      currentLine: 0,\n      sentLine: 1,\n    },\n  };\n}\n\nexport const GRBL = {\n  updateState,\n  getEmptyState,\n};\n","import delay from 'delay';\n\nimport { Device, STATUS_MISSING, STATUS_OPENED, STATUS_CLOSED } from './Device';\nimport EventEmitter from './util/EventEmitter';\nimport checkSerial from './util/checkSerial';\n\n/**\n * Class creating a new serial bridge to manage serial ports.\n * @param {object} [options={}]\n * @param {Array} [options.portFilter] Filter the serial ports to address.\n * @param {object} [options.command={}]\n * @param {number} [options.command.timeout=100] Time to wait for answer before timeout\n * @param {Function} [options.command.isEndCommandAnswer]\n * @param {Function} [options.command.endCommandAnswerCallback]\n * @param {object} [options.device={}]\n * @param {AsyncFunction} [options.device.getID=(device)=>()] Time to wait between commands in [ms]\n * @param {number} [options.device.baudRate=115200] Baud rate\n * @param {number} [options.device.interCommandDelay=100] Time to wait between commands in [ms]\n */\nexport class DevicesManager extends EventEmitter {\n  constructor(serial, options = {}) {\n    super();\n    checkSerial(serial);\n    this.serial = serial;\n    this.terminal = options.terminal;\n    this.logger = options.logger;\n    this.devices = [];\n    this.portFilter = options.portFilter;\n    this.commandOptions = options.command ?? {};\n    this.deviceOptions = options.device ?? {};\n  }\n\n  /**\n   * By calling this method from a click you give users the possibility to allow access to some devices\n   */\n  async requestDevices() {\n    await this.serial.requestPort({\n      filters: this.portFilter,\n    });\n    return this.updateDevices();\n  }\n\n  /**\n   * Update this.devices\n   */\n  async updateDevices() {\n    const serialPorts = await this.serial.getPorts();\n\n    this.logger?.trace('start updateDevices');\n\n    const missingDevicesSerialPort = this.devices.filter(\n      (device) => !serialPorts.includes(device.serialPort),\n    );\n    for (let device of missingDevicesSerialPort) {\n      if (device.status !== STATUS_MISSING && device.status !== STATUS_CLOSED) {\n        device.close();\n      }\n      device.status = STATUS_MISSING;\n    }\n    for (let serialPort of serialPorts) {\n      let device = this.devices.find(\n        (device) => device.serialPort === serialPort,\n      );\n      if (device) {\n        await device.ensureOpen();\n      } else {\n        const serialPortInfo = serialPort.getInfo();\n        let newDevice = new Device(serialPort, {\n          baudRate: this.baudRate,\n          terminal: this.terminal,\n          ...serialPortInfo,\n          commandOptions: this.commandOptions,\n          deviceOptions: this.deviceOptions,\n          logger: this.logger.child({\n            kind: 'Device',\n            ...serialPort.getInfo(),\n          }),\n        });\n        this.devices.push(newDevice);\n        await newDevice.open();\n      }\n    }\n\n    this.logger?.trace('finish updateDevices');\n  }\n\n  /**\n   * Update this.devices every `scanInterval` [ms].\n   * @param {object} [options={}]\n   * @param {number} [options.scanInterval=1000] Delay between `updateDevices()` calls\n   * @param {number} [options.callback] Callback to execute on each update\n   */\n  async continuousUpdateDevices(options = {}) {\n    const { scanInterval = 1000, callback } = options;\n    while (true) {\n      await this.updateDevices();\n      if (callback) {\n        callback(this.devices);\n      }\n      await delay(scanInterval);\n    }\n  }\n\n  /**\n   * Returns this.devices\n   * @param {object} [options={}]\n   * @param {bool} [options.ready=false] If `true` returns only currently connected device. If `false` returns all devices ever connected.\n   * @returns {Array<object>}\n   */\n  getDevicesList(options = {}) {\n    let { ready = false } = options;\n    return this.devices\n      .filter((device) => !ready || device.isReady())\n      .map((device) => ({\n        status: device.status,\n        id: device.id,\n        queueLength: device.queue.length,\n      }));\n  }\n\n  // private function\n  findDevice(id) {\n    if (id === undefined) return undefined;\n    let devices = this.devices.filter(\n      (device) => device.id === id && device.status === STATUS_OPENED,\n    );\n    if (devices.length === 0) return undefined;\n    if (devices.length > 1) {\n      throw new Error(`Many devices have the same id: ${id}`);\n    }\n    return devices[0];\n  }\n\n  /**\n   * Send a serial command to a device.\n   * @param {number} id ID of the device\n   * @param {string} command Command to send\n   * @param {object} [options={}] options\n   * @param {number} [options.timeout] Timeout in [ms]\n   * @param {boolean} [options.timeoutResolve=false] If `true` the promise will resolve even if the command timed out\n   * @param {boolean} [options.disableTerminal=false]\n   */\n  async sendCommand(id, command, options = {}) {\n    const device = this.findDevice(id);\n    if (!device) {\n      throw Error(`Device ${id} not found`);\n    }\n    if (device && device.isReady()) {\n      return device.get(command, options);\n    }\n    throw Error(`Device ${id} not ready: ${device.port.path}`);\n  }\n}\n","/* eslint-disable no-console */\nexport default function checkSerial(serial) {\n  if (!serial) {\n    console.error(\n      \"Web serial doesn't seem to be enabled in your browser. Try enabling it by visiting:\",\n    );\n    console.error('chrome://flags/#enable-experimental-web-platform-features');\n    console.error('opera://flags/#enable-experimental-web-platform-features');\n    console.error('edge://flags/#enable-experimental-web-platform-features');\n  }\n}\n","import { v4 } from '@lukeed/uuid';\n\nexport class Terminal {\n  constructor(options = {}) {\n    this.start = Date.now();\n    this.lineNumber = 0;\n    this.eventNumber = 0;\n    this.limit = options.limit ?? 1000;\n    this.onChange = options.onChange;\n    this.ignoreSend = options.ignoreSend ?? [];\n    this.ignoreReceive = options.ignoreReceive ?? [];\n    this.showSpecial = options.showSpecial ?? true;\n    this.sendColor = options.sendColor ?? '#efcef2';\n    this.receiveColor = options.receiveColor ?? '#bbeeb7';\n    this.events = [];\n  }\n\n  send(text) {\n    this.append(text, 'send');\n  }\n\n  receive(text) {\n    this.append(text, 'receive');\n  }\n\n  shouldIgnore(line, kind) {\n    const ignores = kind === 'send' ? this.ignoreSend : this.ignoreReceive;\n    for (let ignore of ignores) {\n      if (ignore.test(line)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  append(text, kind) {\n    const lines = splitInLines(text, this.showSpecial);\n    this.eventNumber++;\n    const newEvents = [];\n    for (let line of lines) {\n      this.lineNumber++;\n      const event = {\n        uuid: v4(),\n        time: Math.round(Date.now() - this.start),\n        lineNumber: this.lineNumber,\n        eventNumber: this.eventNumber,\n        kind,\n        line,\n      };\n      if (!this.shouldIgnore(line, kind)) {\n        newEvents.push(event);\n        this.events.push(event);\n      }\n    }\n\n    if (this.events.length > this.limit) {\n      this.events.splice(0, this.events.length - this.limit);\n    }\n\n    this.onChange?.(newEvents, this.events);\n  }\n\n  toHtml() {\n    let html = [];\n    html.push('<div style=\"background-color:black\">');\n    for (let event of this.events) {\n      html.push(\n        `<div style=\"color: ${\n          event.kind === 'send' ? this.sendColor : this.receiveColor\n        }\">${(event.time / 1000).toFixed(3)}: ${htmlEscape(event.line)}</div>`,\n      );\n    }\n    html.push('</div>');\n    return html.join('\\n');\n  }\n}\n\nfunction splitInLines(text, showSpecial) {\n  if (showSpecial) {\n    text = text\n      .replace(/\\r/g, '<CR>')\n      .replace(/\\n/g, '<LF>\\n')\n      .replace(/\\t/g, '<TAB>\\t');\n  }\n  return text.replace(/[\\r\\n]+$/, '').split(/\\r?\\n/);\n}\n\nfunction htmlEscape(str) {\n  return str.replace(/&/g, '&amp').replace(/>/g, '&gt').replace(/</g, '&lt');\n}\n"],"names":["createAbortError","error","Error","name","createDelay","_ref","clearTimeout","defaultClear","setTimeout","set","willResolve","ms","timeoutId","settle","rejectFn","value","signal","arguments","length","undefined","aborted","Promise","reject","clear","signalListener","cleanup","removeEventListener","delayPromise","resolve","addEventListener","once","createWithTimers","clearAndSet","delay","range","minimum","maximum","options","randomInteger","Math","floor","random","delayModule","exports","delay$2","default","encoder","TextEncoder","decoder","TextDecoder","Action","constructor","command","device","this","currentTimeout","timeout","timeoutResolve","disableTerminal","kind","answer","partialAnswer","logger","status","creationTimestamp","Date","now","promise","isEndCommandAnswer","endCommandAnswerCallback","info","isFinished","terminal","receive","async","startTimestamp","writeText","then","readText","dataArrayBuffer","encode","send","writer","write","chunk","reader","read","decode","statusLabels","Device","serialPort","commandOptions","deviceOptions","setStatus","id","baudRate","interCommandDelay","getID","usbVendorId","usbProductId","queue","action","statusLabel","isReady","currentProcessQueue","runProcessQueue","shift","writeRead","catch","toString","trace","counter","open","close","ensureOpen","readable","getReader","writable","getWriter","child","push","ensureProcessQueue","path","EventEmitter","callbacks","on","event","cb","emit","data","cbs","forEach","BUFFER","IDX","HEX","substring","v4","num","i","out","Array","alarmsDescription","errorsDescription","parametersDescription","settingsDescription","$0","$1","$2","$3","$4","$5","$6","$10","$11","$12","$13","$20","$21","$22","$23","$24","$25","$26","$27","$30","$31","$32","$100","$101","$102","$110","$111","$112","$120","$121","$122","$130","$131","$132","parseErrors","line","state","split","appendMessage","code","description","parseAlarms","alarm","parseSettings","key","settings","Number","keyMappings","HLP","MSG","GC","VER","OPT","echo","parseSquareBracket","replace","slice","join","parameters","map","field","parseQuestionMark","parts","includes","v","message","messages","epoch","splice","console","log","GRBL","updateState","input","lines","startsWith","version","getEmptyState","gcode","currentLine","sentLine","serial","super","checkSerial","devices","portFilter","requestPort","filters","updateDevices","serialPorts","getPorts","missingDevicesSerialPort","filter","find","serialPortInfo","getInfo","newDevice","scanInterval","callback","getDevicesList","ready","queueLength","findDevice","get","port","start","lineNumber","eventNumber","limit","onChange","ignoreSend","ignoreReceive","showSpecial","sendColor","receiveColor","events","text","append","shouldIgnore","ignores","ignore","test","splitInLines","newEvents","uuid","time","round","toHtml","html","toFixed","str"],"mappings":"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"}